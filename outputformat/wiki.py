"""
wiki output
"""

# inheriting the base class:
from outputformat.base import BaseOutput


class Wiki (BaseOutput):

    OPTION = 'wiki'

    def fact_output(self, fact, caret='^'):
        """
        Output generated by a single fact. It should generally look like:
            | region | elb name | instance id | instance state |
            | ^ | ^ | instance id | instance state |
            | ^ | elb name | instance id | instance state |
            | ^ | ^ | instance id | instance state |
        """
        result = ''
        headings = self.get_fact_headings(fact)
        result += '| *%s* |\n' % fact.NAME.upper()
        result += '| *Region* | *%s* |\n' % '* | *'.join(headings)
        oldregion = None
        oldrow = {}
        for region, fdata in fact.data.items():
            if fdata:
                ordered_facts = sorted(
                    fdata, key=lambda f: [f.get(h) for h in headings])
                for row in ordered_facts:
                    result += '| %s |' % (region if region !=
                                          oldregion else caret)
                    oldregion = region
                    common_prefix = True
                    for element in headings:
                        # Figure out whether to print a caret, or the actual
                        # output
                        newoutput = row.get(element, 'N/A')
                        oldoutput = oldrow.get(element, 'N/A')
                        common_prefix = common_prefix \
                            and newoutput == oldoutput
                        to_print = caret if (
                            common_prefix and newoutput == oldoutput
                        ) else newoutput
                        # to_print = to_print.replace(
                        #     ',', '\\\n') if to_print else to_print
                        result += ('%s |' % to_print)
                    result += '\n'
                    oldrow = row
        return result
